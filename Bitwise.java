package com.elviana;
//belajar oprator bitwise / oprasi bilangan binary
public class bitwise {
	public static void main(String[] args) {
		System.out.println("OPRASI BILANGAN BINARY (BITWISE)" + "\n");
		byte a, b, c;
		String a_bits, b_bits, c_bits;
		System.out.println("SHIFT LEFT (<<) menggeser arah bit kekriri ");
		a = 5;
		a_bits = String.format("%8s",Integer.toBinaryString(a)).replace(' ','0');
		System.out.printf("a \t\t\t = %s = %d \n",a_bits, a);
		b = (byte)(a << 2);
		b_bits = String.format("%8s",Integer.toBinaryString(b)).replace(' ','0');
		System.out.print("-----------------------------------" + "\n");
		System.out.printf("a << 2 \t = %s = %d \n\n",b_bits, b);
		System.out.println("SHIFT RIGHT (>>) menggeser arah bit kekanan");
		a = 20;
		a_bits = String.format("%8s",Integer.toBinaryString(a)).replace(' ','0');
		System.out.printf("a \t\t\t = %s = %d \n",a_bits, a);
		b = (byte)(a >> 1);
		b_bits = String.format("%8s",Integer.toBinaryString(b)).replace(' ','0');
		System.out.print("-----------------------------------" + "\n");
		System.out.printf("a >> 1 \t = %s = %d \n\n",b_bits, b);
		System.out.println("OR (|) benar jika salah satu / keduanya true");
		a = 10;
		a_bits = String.format("%8s",Integer.toBinaryString(a)).replace(' ','0');
		System.out.printf("a \t\t\t = %s = %d \n",a_bits, a);
		b = 12;
		b_bits = String.format("%8s",Integer.toBinaryString(b)).replace(' ','0');
		System.out.printf("b \t\t\t = %s = %d \n",b_bits, b);
		c = (byte)(a | b);
		c_bits = String.format("%8s",Integer.toBinaryString(c)).replace(' ','0');
		System.out.print("-----------------------------------" + "\n");
		System.out.printf("a | b \t = %s = %d \n\n",c_bits, c);
		System.out.println("AND (&) hanya akan benar jika keduanya true");
		a = 10;
		a_bits = String.format("%8s",Integer.toBinaryString(a)).replace(' ','0');
		System.out.printf("a \t\t\t = %s = %d \n",a_bits, a);
		b = 12;
		b_bits = String.format("%8s",Integer.toBinaryString(b)).replace(' ','0');
		System.out.printf("b \t\t\t = %s = %d \n",b_bits, b);
		c = (byte)(a & b);
		c_bits = String.format("%8s",Integer.toBinaryString(c)).replace(' ','0');
		System.out.print("-----------------------------------" + "\n");
		System.out.printf("a & b \t = %s = %d \n\n",c_bits, c);
		System.out.println("XOR (^) hanya akan benar jika salah satu true");
		a = 10;
		a_bits = String.format("%8s",Integer.toBinaryString(a)).replace(' ','0');
		System.out.printf("a \t\t\t = %s = %d \n",a_bits, a);
		b = 12;
		b_bits = String.format("%8s",Integer.toBinaryString(b)).replace(' ','0');
		System.out.printf("b \t\t\t = %s = %d \n",b_bits, b);
		c = (byte)(a ^ b);
		c_bits = String.format("%8s",Integer.toBinaryString(c)).replace(' ','0');
		System.out.print("-----------------------------------" + "\n");
		System.out.printf("a ^ b \t = %s = %d \n\n",c_bits, c);
		System.out.println("NOT (~) ini adalah kebalikan dari nilai");
		a = 10;
		b = (byte) (~a);
		a_bits = String.format("%8s",Integer.toBinaryString(a)).replace(' ','0');
		System.out.printf("a \t\t\t = %s = %d \n",a_bits, a);
		b_bits = String.format("%8s",Integer.toBinaryString(b).substring(24));
		System.out.print("-----------------------------------" + "\n");
		System.out.printf("~a \t\t\t = %s = %d \n\n",b_bits, b);
		System.out.print("program selesai \n >_");
	}
}
